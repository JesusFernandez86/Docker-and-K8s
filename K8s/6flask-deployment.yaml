apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: flask-app

spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
      deploy: separate
      run: together
  template:
    metadata:
      labels:
        app: flask-app
        deploy: separate
        run: together
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port:   '9090'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: deploy
                  operator: In
                  values:
                  - separate
            topologyKey: kubernetes.io/hostname  
      containers:
      - name: flask-app
        image: latalavera/flask-app:10
        livenessProbe:
          httpGet:
            path: /health/live
            port: 5000
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 5000
        env:
          - name: MONGODB_USERNAME
            value: root
          - name: MONGODB_PASSWORD
            value: pass
          - name: MONGODB_HOSTNAME
            value: mongodb-flask
          - name: MONGODB_DATABASE
            value: cars_db
        ports:
          - containerPort: 5000
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: flask-app
spec:
  selector:
    app: flask-app
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  type: ClusterIP


        